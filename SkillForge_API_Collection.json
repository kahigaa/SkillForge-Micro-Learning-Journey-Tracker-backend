{
	"info": {
		"_postman_id": "b3e4f5a6-1234-5678-9abc-def012345678",
		"name": "SkillForge - Auth & Logout",
		"description": "A collection to test user registration with email, login, and the logout token blocklist.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Register New User (with Email)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test_user_final\",\n    \"email\": \"test.final@example.com\",\n    \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"register"
					]
				},
				"description": "Creates a new user account with an email address."
			},
			"response": []
		},
		{
			"name": "2. Login User (to get token)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if (pm.response.code === 200) {",
							"    pm.collectionVariables.set(\"jwt_token\", pm.response.json().access_token);",
							"    console.log(\"JWT Token saved successfully!\");",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"login\": \"test.final@example.com\",\n    \"password\": \"password123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "Logs in a user using their email and returns a JWT access token. The token is automatically saved to a variable for other requests to use."
			},
			"response": []
		},
		{
			"name": "3. Test Protected Route (Journeys)",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/journeys",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"journeys"
					]
				},
				"description": "Confirms the JWT token is working by fetching journeys."
			},
			"response": []
		},
		{
			"name": "4. Logout User",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/auth/logout",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				},
				"description": "Logs out the user by adding their current token to the blocklist."
			},
			"response": []
		},
		{
			"name": "5. Verify Token is Revoked",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api/journeys",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"journeys"
					]
				},
				"description": "Attempts to fetch journeys again with the now-revoked token. This should fail."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://127.0.0.1:5000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	]
}